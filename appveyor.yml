version: 7.50.0.{build}

environment:
    matrix:
      - PRJ_GEN: "Visual Studio 15 2017"
        BDIR: msvc2017
        VSVER: 15
        ARCH: x86
        PRJ_CFG: Release
        OPENSSL: ON
        TESTING: OFF
        STATICLIB: OFF
        CUSTOM_OPENSSL_DIST: "https://github.com/iPherian/openssl/releases/download/OpenSSL_1_0_2-stable-build_1.0.34/OpenSSL_1_0_2-stable-shared-x86-vc15-build_1.0.34.zip"

image: Visual Studio 2017

clone_depth: 40

skip_tags: true

before_build:
    - ps: echo $env:CUSTOM_OPENSSL_DIST
    - ps: $env:REPLACE_OPENSSL_ROOT="C:\OpenSSL-Win32"
    - call dir C:\
    - ps: >-
        If (Test-Path env:CUSTOM_OPENSSL_DIST) {
            echo "replacing openssl with $env:CUSTOM_OPENSSL_DIST"
            $download_to_loc="$env:APPVEYOR_BUILD_FOLDER\_custom_openssl.zip"
            Remove-Item -Recurse $env:REPLACE_OPENSSL_ROOT
            Remove-Item -Recurse "C:\OpenSSL-Win64"
            New-Item -ItemType directory -Path $env:REPLACE_OPENSSL_ROOT
            Invoke-WebRequest $env:CUSTOM_OPENSSL_DIST -OutFile $download_to_loc
            7z x $download_to_loc "-o$env:REPLACE_OPENSSL_ROOT"
        }
    - call dir "%REPLACE_OPENSSL_ROOT%"

build_script:
    - mkdir build.%BDIR%
    - cd build.%BDIR%
    - cmake .. -G"%PRJ_GEN%" -DCMAKE_USE_OPENSSL=%OPENSSL% -DCURL_STATICLIB=%STATICLIB% -DBUILD_TESTING=%TESTING% -DCURL_WERROR=ON
    - cmake --build . --config %PRJ_CFG% --clean-first

after_build:
    - ps: >-
        If (1) {
          Set-Location -Path $env:APPVEYOR_BUILD_FOLDER
          $release_dir="tmp_release"
          New-Item -ItemType directory -Path $release_dir
          $env:RELEASE_MIN_DIR=($release_dir+"\min")
          New-Item -ItemType directory -Path $env:RELEASE_MIN_DIR
          New-Item -ItemType directory -Path ($env:RELEASE_MIN_DIR+"\bin")
          New-Item -ItemType directory -Path ($env:RELEASE_MIN_DIR+"\lib")
          New-Item -ItemType directory -Path ($env:RELEASE_MIN_DIR+"\exp")
          $robocopy_opts=@('/COPYALL', '/E', '/FP', '/NP')
          $build_out_dir_one=("build."+$env:BDIR+"\src\"+$env:PRJ_CFG)
          $build_out_dir_two=("build."+$env:BDIR+"\lib\"+$env:PRJ_CFG)
          # into <archive_root>/bin goes the exe and anything required to run it
          robocopy $build_out_dir_one ($env:RELEASE_MIN_DIR+"\bin") "*.dll" "*.exe" $robocopy_opts
          robocopy $build_out_dir_two ($env:RELEASE_MIN_DIR+"\bin") "*.dll" "*.exe" $robocopy_opts
          # into <archive_root>/lib goes the implibs
          robocopy $build_out_dir_one ($env:RELEASE_MIN_DIR+"\lib") "*.lib" $robocopy_opts
          robocopy $build_out_dir_two ($env:RELEASE_MIN_DIR+"\lib") "*.lib" $robocopy_opts
          # into <archive_root>/exp goes the export descriptions for the libraries
          robocopy $build_out_dir_one ($env:RELEASE_MIN_DIR+"\exp") "*.exp" $robocopy_opts
          robocopy $build_out_dir_two ($env:RELEASE_MIN_DIR+"\exp") "*.exp" $robocopy_opts
          Set-Location -Path $env:RELEASE_MIN_DIR
          $env:RELEASE_MIN_FILENAME=($env:APPVEYOR_REPO_BRANCH+"-"+$env:PRJ_CFG+"-"+$env:ARCH+"-vc"+$env:VSVER+"-build_"+$env:APPVEYOR_BUILD_VERSION+".zip")
          7z a ($env:APPVEYOR_BUILD_FOLDER+"\"+$env:RELEASE_MIN_FILENAME) "*"
          Set-Location -Path $env:APPVEYOR_BUILD_FOLDER
        }

artifacts:
    - path: '$(RELEASE_MIN_FILENAME)'
      name: '$(RELEASE_MIN_FILENAME)'
      type: Zip
    - path: 'build.$(BDIR)'
      name: '$(APPVEYOR_REPO_BRANCH)-$(PRJ_CFG)-$(ARCH)-vc$(VSVER)-build_$(APPVEYOR_BUILD_VERSION)-all'
